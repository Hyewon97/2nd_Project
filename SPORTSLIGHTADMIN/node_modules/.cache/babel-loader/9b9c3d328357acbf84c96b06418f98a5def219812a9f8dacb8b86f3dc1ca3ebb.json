{"ast":null,"code":"import axios from \"axios\";\nimport { baseURL } from \"../../apiurl\";\nimport { noticeReducers } from \"../reducers/notice_reducer\";\n//\nfunction getNoticeList(currentPage) {\n  return async dispatch => {\n    // 백엔드에 값 요청\n    const data = await axios.get(`${baseURL}/admin/notice/list/${currentPage}`).then(response => response.data); // 값 받기\n\n    console.log(data);\n    dispatch(noticeReducers.getNoticeList({\n      data\n    }));\n  };\n}\nfunction getNoticeDetail(num, config) {\n  return async dispatch => {\n    //data 값을 reduce를 이용해서 store에 저장해야함\n    const data = await axios.get(`${baseURL}/admin/notice/view/${num}`, config).then(response => response.data);\n    dispatch(noticeReducers.getNoticeDetail({\n      data\n    }));\n  };\n}\nfunction getNoticeDelete(num, config) {\n  return async dispatch => {\n    await axios.delete(`${baseURL}/admin/notice/delete/${num}`, config).then(response => response.data);\n  };\n}\nfunction getNoticeWrite(formData, config) {\n  return async () => {\n    await axios.post(`${baseURL}/admin/notice/write`, formData, config).then(response => response.data);\n  };\n}\nfunction getNoticeUpdate(formData, config) {\n  return async () => {\n    await axios.put(`${baseURL}/admin/notice/update`, formData, config).then(response => response.data);\n  };\n}\n\n// 어디에 있는거를 호출하는지 이름으로 구분 가능하다. 어느 라이브러리에 있는 어느 함수인지\nexport const noticeActions = {\n  getNoticeList,\n  getNoticeDetail,\n  getNoticeDelete,\n  getNoticeWrite,\n  getNoticeUpdate\n}; // 여기에 등록을 해주어야 외부에서 접근할 수 있음\n\n// 바로 호출할거면\n// export const getBoardList; // 이런 식으로 쓰는듯","map":{"version":3,"names":["axios","baseURL","noticeReducers","getNoticeList","currentPage","dispatch","data","get","then","response","console","log","getNoticeDetail","num","config","getNoticeDelete","delete","getNoticeWrite","formData","post","getNoticeUpdate","put","noticeActions"],"sources":["C:/k_digital/react_workspace/sportslightadmin/src/reduxs/actions/notice_action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { baseURL } from \"../../apiurl\";\r\nimport { noticeReducers } from \"../reducers/notice_reducer\";\r\n//\r\nfunction getNoticeList(currentPage) {\r\n  return async (dispatch) => {\r\n    // 백엔드에 값 요청\r\n    const data = await axios\r\n      .get(`${baseURL}/admin/notice/list/${currentPage}`)\r\n      .then((response) => response.data); // 값 받기\r\n\r\n    console.log(data);\r\n    dispatch(noticeReducers.getNoticeList({ data }));\r\n  };\r\n}\r\n\r\nfunction getNoticeDetail(num, config) {\r\n  return async (dispatch) => {\r\n    //data 값을 reduce를 이용해서 store에 저장해야함\r\n    const data = await axios\r\n      .get(`${baseURL}/admin/notice/view/${num}`, config)\r\n      .then((response) => response.data);\r\n    dispatch(noticeReducers.getNoticeDetail({ data }));\r\n  };\r\n}\r\n\r\nfunction getNoticeDelete(num, config) {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .delete(`${baseURL}/admin/notice/delete/${num}`, config)\r\n      .then((response) => response.data);\r\n  };\r\n}\r\n\r\nfunction getNoticeWrite(formData, config) {\r\n  return async () => {\r\n    await axios\r\n      .post(`${baseURL}/admin/notice/write`, formData, config)\r\n      .then((response) => response.data);\r\n  };\r\n}\r\n\r\nfunction getNoticeUpdate(formData, config) {\r\n  return async () => {\r\n    await axios\r\n      .put(`${baseURL}/admin/notice/update`, formData, config)\r\n      .then((response) => response.data);\r\n  };\r\n}\r\n\r\n// 어디에 있는거를 호출하는지 이름으로 구분 가능하다. 어느 라이브러리에 있는 어느 함수인지\r\nexport const noticeActions = {\r\n  getNoticeList,\r\n  getNoticeDetail,\r\n  getNoticeDelete,\r\n  getNoticeWrite,\r\n  getNoticeUpdate,\r\n}; // 여기에 등록을 해주어야 외부에서 접근할 수 있음\r\n\r\n// 바로 호출할거면\r\n// export const getBoardList; // 이런 식으로 쓰는듯\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,cAAc,QAAQ,4BAA4B;AAC3D;AACA,SAASC,aAAaA,CAACC,WAAW,EAAE;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACzB;IACA,MAAMC,IAAI,GAAG,MAAMN,KAAK,CACrBO,GAAG,CAAE,GAAEN,OAAQ,sBAAqBG,WAAY,EAAC,CAAC,CAClDI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC;;IAEtCI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjBD,QAAQ,CAACH,cAAc,CAACC,aAAa,CAAC;MAAEG;IAAK,CAAC,CAAC,CAAC;EAClD,CAAC;AACH;AAEA,SAASM,eAAeA,CAACC,GAAG,EAAEC,MAAM,EAAE;EACpC,OAAO,MAAOT,QAAQ,IAAK;IACzB;IACA,MAAMC,IAAI,GAAG,MAAMN,KAAK,CACrBO,GAAG,CAAE,GAAEN,OAAQ,sBAAqBY,GAAI,EAAC,EAAEC,MAAM,CAAC,CAClDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,IAAI,CAAC;IACpCD,QAAQ,CAACH,cAAc,CAACU,eAAe,CAAC;MAAEN;IAAK,CAAC,CAAC,CAAC;EACpD,CAAC;AACH;AAEA,SAASS,eAAeA,CAACF,GAAG,EAAEC,MAAM,EAAE;EACpC,OAAO,MAAOT,QAAQ,IAAK;IACzB,MAAML,KAAK,CACRgB,MAAM,CAAE,GAAEf,OAAQ,wBAAuBY,GAAI,EAAC,EAAEC,MAAM,CAAC,CACvDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,IAAI,CAAC;EACtC,CAAC;AACH;AAEA,SAASW,cAAcA,CAACC,QAAQ,EAAEJ,MAAM,EAAE;EACxC,OAAO,YAAY;IACjB,MAAMd,KAAK,CACRmB,IAAI,CAAE,GAAElB,OAAQ,qBAAoB,EAAEiB,QAAQ,EAAEJ,MAAM,CAAC,CACvDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,IAAI,CAAC;EACtC,CAAC;AACH;AAEA,SAASc,eAAeA,CAACF,QAAQ,EAAEJ,MAAM,EAAE;EACzC,OAAO,YAAY;IACjB,MAAMd,KAAK,CACRqB,GAAG,CAAE,GAAEpB,OAAQ,sBAAqB,EAAEiB,QAAQ,EAAEJ,MAAM,CAAC,CACvDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,IAAI,CAAC;EACtC,CAAC;AACH;;AAEA;AACA,OAAO,MAAMgB,aAAa,GAAG;EAC3BnB,aAAa;EACbS,eAAe;EACfG,eAAe;EACfE,cAAc;EACdG;AACF,CAAC,CAAC,CAAC;;AAEH;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\k_digital\\\\react_workspace\\\\myapp005_fronted_shop\\\\src\\\\components\\\\board\\\\board_write.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { Link, useNavigate, useParams } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { boardActions } from \"../../reduxs/actions/board_action\";\n\n// const BoardWrite = () => {\n//   const navigator = useNavigate();\n//   const dispatch = useDispatch();\n\n//   const [inputs, setInputs] = useState({\n//     subject: \"\",\n//     content: \"\",\n//     filename: null,\n//   });\n\n//   const { subject, content, filename } = inputs;\n\n//   // 답변글일때 num을 받아와야함\n//   const { num } = useParams();\n\n//   const pv = useSelector((state) =>\n//     state.board.pv ? state.board.pv : { currentPage: 1 }\n//   );\n\n//   const boardDetail = useSelector((state) => state.board.boardDetail);\n\n//   // 일반 데이터\n//   const handleValueChange = (e) => {\n//     // let nextState = {};\n//     // nextState[e.target.name] = e.target.value;\n//     // setInputs({ ...inputs, ...nextState });\n\n//     setInputs((prev) => {\n//       return { ...prev, [e.target.name]: e.target.value };\n//     });\n//   };\n\n//   //첨부파일\n//   const handleFileChange = (e) => {\n//     e.preventDefault();\n//     setInputs({ ...inputs, [e.target.name]: e.target.files[0] }); //files가 collection이라 [0]이라고 해야 원하는 값을 가져올 수 있다.\n//   };\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"subject\", subject);\n//     formData.append(\"content\", content);\n//     console.log(\"filename\", filename); // 첨부파일은 이름만 찍어봄\n//     //js 구현하는 부분이라서 if문 사용가능\n//     // 선택한 첨부파일이 있으면!\n//     if (filename != null) formData.append(\"filename\", filename);\n\n//     // 답변글이면...\n//     if (num !== undefined) {\n//       formData.append(\"num\", boardDetail.num);\n//       formData.append(\"ref\", boardDetail.ref);\n//       formData.append(\"re_step\", boardDetail.re_step);\n//       formData.append(\"re_level\", boardDetail.re_level);\n//     }\n\n//     const config = {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     };\n\n//     await dispatch(boardActions.getBoardWrite(formData, config));\n\n//     // 초기화 시켜주기 위해서\n//     setInputs({\n//       subject: \"\",\n//       content: \"\",\n//       filename: null,\n//     });\n\n//     // 글을 다 쓰고나서 리스트 가져오기\n//     // 답변글이면 그 페이지로 가고, 제목글이면 첫페이지로 가도록함\n//     navigator(\n//       `/board/list/${pv.currentPage ? pv.currentPage : { currentPage: 1 }}`\n//     );\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={onSubmit}>\n//         <table>\n//           <tbody>\n//             <tr>\n//               <td width=\"20%\" align=\"center\">\n//                 제목\n//               </td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   name=\"subject\"\n//                   size=\"40\"\n//                   value={subject}\n//                   placeholder={num !== undefined ? \"답변\" : null}\n//                   onChange={handleValueChange}\n//                 />\n//               </td>\n//             </tr>\n\n//             <tr>\n//               <td width=\"20%\" align=\"center\">\n//                 내용\n//               </td>\n//               <td>\n//                 <textarea\n//                   name=\"content\"\n//                   rows=\"13\"\n//                   cols=\"40\"\n//                   value={content}\n//                   onChange={handleValueChange}\n//                 ></textarea>\n//               </td>\n//             </tr>\n\n//             <tr>\n//               <td width=\"20%\" align=\"center\">\n//                 첨부파일\n//               </td>\n//               <td>\n//                 <input\n//                   type=\"file\"\n//                   name=\"filename\"\n//                   id=\"filepath\"\n//                   onChange={handleFileChange}\n//                 />\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//         <Link className=\"btn btn-primary\" to={`/board/list/${pv.currentPage}`}>\n//           리스트\n//         </Link>\n//         <input type=\"submit\" className=\"btn btn-primary\" value=\"등록\" />\n//       </form>\n//     </>\n//   );\n// };\n\n// export default BoardWrite;\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { boardActions } from \"../../reduxs/actions/board_action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BoardWrite = () => {\n  _s();\n  const navigator = useNavigate();\n  const dispatch = useDispatch();\n  const [inputs, setInputs] = useState({\n    subject: \"\",\n    content: \"\",\n    filename: null\n  });\n  const {\n    subject,\n    content,\n    filename\n  } = inputs;\n  const {\n    num\n  } = useParams();\n  const pv = useSelector(state => state.board.pv ? state.board.pv : {\n    currentPage: 1\n  });\n  const boardDetail = useSelector(state => state.board.boardDetail);\n  const handleValueChange = e => {\n    //하기와 같이 setInputs는 3가지 방법으로 쓸 수 있음\n    // let nextState = {};\n    // nextState[e.target.name] = e.target.value;\n    // setInputs({ ...inputs, ...nextState });\n\n    // setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n    setInputs(prev => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  //file은 처리방법이 다름 files 컬렉션이라서 0번째를 가지고 옴\n  const handleFileChange = e => {\n    e.preventDefault();\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.files[0]\n    });\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"subject\", subject);\n    formData.append(\"content\", content);\n    console.log(\"filename:\", filename);\n    if (filename != null) formData.append(\"filename\", filename);\n\n    //답변글이면..\n    if (num !== undefined) {\n      formData.append(\"num\", boardDetail.num);\n      formData.append(\"ref\", boardDetail.ref);\n      formData.append(\"re_step\", boardDetail.re_step);\n      formData.append(\"re_level\", boardDetail.re_level);\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    await dispatch(boardActions.getBoardWrite(formData, config));\n    setInputs({\n      subject: \"\",\n      content: \"\",\n      filename: null\n    });\n    navigator(`/board/list/${pv.currentPage ? pv.currentPage : {\n      currentPage: 1\n    }}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"20%\",\n              align: \"center\",\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"subject\",\n                size: \"40\",\n                value: subject,\n                placeholder: num !== undefined ? \"답변\" : null,\n                onChange: handleValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"20%\",\n              align: \"center\",\n              children: \"\\uB0B4\\uC6A9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"content\",\n                rows: \"13\",\n                cols: \"40\",\n                value: content,\n                onChange: handleValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"20%\",\n              align: \"center\",\n              children: \"\\uCCA8\\uBD80\\uD30C\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"filename\",\n                id: \"filepath\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary\",\n        to: `/board/list/${pv.currentPage}`,\n        children: \"\\uB9AC\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(BoardWrite, \"I5DgjDzrX3Tq454Djc+4cm5hjiM=\", false, function () {\n  return [useNavigate, useDispatch, useParams, useSelector, useSelector];\n});\n_c = BoardWrite;\nexport default BoardWrite;\nvar _c;\n$RefreshReg$(_c, \"BoardWrite\");","map":{"version":3,"names":["useState","useDispatch","useSelector","Link","useNavigate","useParams","boardActions","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardWrite","_s","navigator","dispatch","inputs","setInputs","subject","content","filename","num","pv","state","board","currentPage","boardDetail","handleValueChange","e","prev","target","name","value","handleFileChange","preventDefault","files","onSubmit","formData","FormData","append","console","log","undefined","ref","re_step","re_level","config","headers","getBoardWrite","children","width","align","fileName","_jsxFileName","lineNumber","columnNumber","type","size","placeholder","onChange","rows","cols","id","className","to","_c","$RefreshReg$"],"sources":["C:/k_digital/react_workspace/myapp005_fronted_shop/src/components/board/board_write.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { boardActions } from \"../../reduxs/actions/board_action\";\r\n\r\n// const BoardWrite = () => {\r\n//   const navigator = useNavigate();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const [inputs, setInputs] = useState({\r\n//     subject: \"\",\r\n//     content: \"\",\r\n//     filename: null,\r\n//   });\r\n\r\n//   const { subject, content, filename } = inputs;\r\n\r\n//   // 답변글일때 num을 받아와야함\r\n//   const { num } = useParams();\r\n\r\n//   const pv = useSelector((state) =>\r\n//     state.board.pv ? state.board.pv : { currentPage: 1 }\r\n//   );\r\n\r\n//   const boardDetail = useSelector((state) => state.board.boardDetail);\r\n\r\n//   // 일반 데이터\r\n//   const handleValueChange = (e) => {\r\n//     // let nextState = {};\r\n//     // nextState[e.target.name] = e.target.value;\r\n//     // setInputs({ ...inputs, ...nextState });\r\n\r\n//     setInputs((prev) => {\r\n//       return { ...prev, [e.target.name]: e.target.value };\r\n//     });\r\n//   };\r\n\r\n//   //첨부파일\r\n//   const handleFileChange = (e) => {\r\n//     e.preventDefault();\r\n//     setInputs({ ...inputs, [e.target.name]: e.target.files[0] }); //files가 collection이라 [0]이라고 해야 원하는 값을 가져올 수 있다.\r\n//   };\r\n\r\n//   const onSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"content\", content);\r\n//     console.log(\"filename\", filename); // 첨부파일은 이름만 찍어봄\r\n//     //js 구현하는 부분이라서 if문 사용가능\r\n//     // 선택한 첨부파일이 있으면!\r\n//     if (filename != null) formData.append(\"filename\", filename);\r\n\r\n//     // 답변글이면...\r\n//     if (num !== undefined) {\r\n//       formData.append(\"num\", boardDetail.num);\r\n//       formData.append(\"ref\", boardDetail.ref);\r\n//       formData.append(\"re_step\", boardDetail.re_step);\r\n//       formData.append(\"re_level\", boardDetail.re_level);\r\n//     }\r\n\r\n//     const config = {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     };\r\n\r\n//     await dispatch(boardActions.getBoardWrite(formData, config));\r\n\r\n//     // 초기화 시켜주기 위해서\r\n//     setInputs({\r\n//       subject: \"\",\r\n//       content: \"\",\r\n//       filename: null,\r\n//     });\r\n\r\n//     // 글을 다 쓰고나서 리스트 가져오기\r\n//     // 답변글이면 그 페이지로 가고, 제목글이면 첫페이지로 가도록함\r\n//     navigator(\r\n//       `/board/list/${pv.currentPage ? pv.currentPage : { currentPage: 1 }}`\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <form onSubmit={onSubmit}>\r\n//         <table>\r\n//           <tbody>\r\n//             <tr>\r\n//               <td width=\"20%\" align=\"center\">\r\n//                 제목\r\n//               </td>\r\n//               <td>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"subject\"\r\n//                   size=\"40\"\r\n//                   value={subject}\r\n//                   placeholder={num !== undefined ? \"답변\" : null}\r\n//                   onChange={handleValueChange}\r\n//                 />\r\n//               </td>\r\n//             </tr>\r\n\r\n//             <tr>\r\n//               <td width=\"20%\" align=\"center\">\r\n//                 내용\r\n//               </td>\r\n//               <td>\r\n//                 <textarea\r\n//                   name=\"content\"\r\n//                   rows=\"13\"\r\n//                   cols=\"40\"\r\n//                   value={content}\r\n//                   onChange={handleValueChange}\r\n//                 ></textarea>\r\n//               </td>\r\n//             </tr>\r\n\r\n//             <tr>\r\n//               <td width=\"20%\" align=\"center\">\r\n//                 첨부파일\r\n//               </td>\r\n//               <td>\r\n//                 <input\r\n//                   type=\"file\"\r\n//                   name=\"filename\"\r\n//                   id=\"filepath\"\r\n//                   onChange={handleFileChange}\r\n//                 />\r\n//               </td>\r\n//             </tr>\r\n//           </tbody>\r\n//         </table>\r\n//         <Link className=\"btn btn-primary\" to={`/board/list/${pv.currentPage}`}>\r\n//           리스트\r\n//         </Link>\r\n//         <input type=\"submit\" className=\"btn btn-primary\" value=\"등록\" />\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default BoardWrite;\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { boardActions } from \"../../reduxs/actions/board_action\";\r\n\r\nconst BoardWrite = () => {\r\n  const navigator = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    subject: \"\",\r\n    content: \"\",\r\n    filename: null,\r\n  });\r\n\r\n  const { subject, content, filename } = inputs;\r\n\r\n  const { num } = useParams();\r\n\r\n  const pv = useSelector((state) =>\r\n    state.board.pv ? state.board.pv : { currentPage: 1 }\r\n  );\r\n\r\n  const boardDetail = useSelector((state) => state.board.boardDetail);\r\n\r\n  const handleValueChange = (e) => {\r\n    //하기와 같이 setInputs는 3가지 방법으로 쓸 수 있음\r\n    // let nextState = {};\r\n    // nextState[e.target.name] = e.target.value;\r\n    // setInputs({ ...inputs, ...nextState });\r\n\r\n    // setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  //file은 처리방법이 다름 files 컬렉션이라서 0번째를 가지고 옴\r\n  const handleFileChange = (e) => {\r\n    e.preventDefault();\r\n    setInputs({ ...inputs, [e.target.name]: e.target.files[0] });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"subject\", subject);\r\n    formData.append(\"content\", content);\r\n\r\n    console.log(\"filename:\", filename);\r\n    if (filename != null) formData.append(\"filename\", filename);\r\n\r\n    //답변글이면..\r\n    if (num !== undefined) {\r\n      formData.append(\"num\", boardDetail.num);\r\n      formData.append(\"ref\", boardDetail.ref);\r\n      formData.append(\"re_step\", boardDetail.re_step);\r\n      formData.append(\"re_level\", boardDetail.re_level);\r\n    }\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    await dispatch(boardActions.getBoardWrite(formData, config));\r\n\r\n    setInputs({\r\n      subject: \"\",\r\n      content: \"\",\r\n      filename: null,\r\n    });\r\n\r\n    navigator(\r\n      `/board/list/${pv.currentPage ? pv.currentPage : { currentPage: 1 }}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"20%\" align=\"center\">\r\n                제목\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  size=\"40\"\r\n                  value={subject}\r\n                  placeholder={num !== undefined ? \"답변\" : null}\r\n                  onChange={handleValueChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td width=\"20%\" align=\"center\">\r\n                내용\r\n              </td>\r\n              <td>\r\n                <textarea\r\n                  name=\"content\"\r\n                  rows=\"13\"\r\n                  cols=\"40\"\r\n                  value={content}\r\n                  onChange={handleValueChange}\r\n                ></textarea>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td width=\"20%\" align=\"center\">\r\n                첨부파일\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"filename\"\r\n                  id=\"filepath\"\r\n                  onChange={handleFileChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <Link className=\"btn btn-primary\" to={`/board/list/${pv.currentPage}`}>\r\n          리스트\r\n        </Link>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"등록\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardWrite;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
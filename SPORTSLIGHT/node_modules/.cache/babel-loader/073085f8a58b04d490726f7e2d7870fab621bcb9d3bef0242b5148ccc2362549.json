{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nlet initialState = {\n  recentList: [],\n  viewsList: [],\n  leagueList: [],\n  talkpageDto: {\n    currentPage: 1\n  },\n  leagueNum: {},\n  talkRead: {},\n  fileName: null\n};\nconst talkSlice = createSlice({\n  name: 'talk',\n  initialState,\n  //이름을 주고 초기값 설정(initialState)\n\n  reducers: {\n    recentList(state, action) {\n      state.recentList = action.payload.data.recentList;\n      state.talkpageDto = action.payload.data.talkpageDto;\n    },\n    viewsList(state, action) {\n      state.viewsList = action.payload.data.viewsList;\n      state.talkpageDto = action.payload.data.talkpageDto;\n    },\n    leagueList(state, action) {\n      state.leagueList = action.payload.data.leagueList;\n      state.leagueNum = action.payload.data.leagueNum;\n    },\n    talkRead(state, action) {\n      state.talkRead = action.payload.data;\n    },\n    talkDownload(state, action) {\n      state.fileName = action.payload.data;\n    }\n  }\n});\n\n//이것을 사용해서 함수명 자동완성을 할 수 있다.\nexport const talkReducers = talkSlice.actions;\nexport default talkSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","recentList","viewsList","leagueList","talkpageDto","currentPage","leagueNum","talkRead","fileName","talkSlice","name","reducers","state","action","payload","data","talkDownload","talkReducers","actions","reducer"],"sources":["C:/k_digital/react_workspace/sportslight/src/reduxs/reducers/talkReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nlet initialState = {\n  recentList: [],\n  viewsList: [],\n  leagueList: [],\n  talkpageDto: { currentPage: 1 },\n  leagueNum: {},\n  talkRead: {},\n  fileName: null,\n};\n\nconst talkSlice = createSlice({\n  name: 'talk',\n  initialState, //이름을 주고 초기값 설정(initialState)\n\n  reducers: {\n    recentList(state, action) {\n      state.recentList = action.payload.data.recentList;\n      state.talkpageDto = action.payload.data.talkpageDto;\n    },\n\n    viewsList(state, action) {\n      state.viewsList = action.payload.data.viewsList;\n      state.talkpageDto = action.payload.data.talkpageDto;\n    },\n\n    leagueList(state, action) {\n      state.leagueList = action.payload.data.leagueList;\n      state.leagueNum = action.payload.data.leagueNum;\n    },\n\n    talkRead(state, action) {\n      state.talkRead = action.payload.data;\n    },\n\n    talkDownload(state, action) {\n      state.fileName = action.payload.data;\n    },\n  },\n});\n\n//이것을 사용해서 함수명 자동완성을 할 수 있다.\nexport const talkReducers = talkSlice.actions;\nexport default talkSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,YAAY,GAAG;EACjBC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE;IAAEC,WAAW,EAAE;EAAE,CAAC;EAC/BC,SAAS,EAAE,CAAC,CAAC;EACbC,QAAQ,EAAE,CAAC,CAAC;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZV,YAAY;EAAE;;EAEdW,QAAQ,EAAE;IACRV,UAAUA,CAACW,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACX,UAAU,GAAGY,MAAM,CAACC,OAAO,CAACC,IAAI,CAACd,UAAU;MACjDW,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO,CAACC,IAAI,CAACX,WAAW;IACrD,CAAC;IAEDF,SAASA,CAACU,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACC,OAAO,CAACC,IAAI,CAACb,SAAS;MAC/CU,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO,CAACC,IAAI,CAACX,WAAW;IACrD,CAAC;IAEDD,UAAUA,CAACS,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACT,UAAU,GAAGU,MAAM,CAACC,OAAO,CAACC,IAAI,CAACZ,UAAU;MACjDS,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO,CAACC,IAAI,CAACT,SAAS;IACjD,CAAC;IAEDC,QAAQA,CAACK,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO,CAACC,IAAI;IACtC,CAAC;IAEDC,YAAYA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACC,OAAO,CAACC,IAAI;IACtC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,YAAY,GAAGR,SAAS,CAACS,OAAO;AAC7C,eAAeT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
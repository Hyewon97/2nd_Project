{"ast":null,"code":"var _jsxFileName = \"C:\\\\k_digital\\\\SportsLight\\\\Front\\\\sportslight\\\\src\\\\components\\\\community\\\\footballtalk\\\\talkTableRow.js\";\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TalkTableRow = props => {\n  const {\n    talk\n  } = props;\n\n  // 오늘의 게시물 날짜 포맷은 'HH:mm', 이전의 게시물 날짜 포맷은 'YYYY-MM-DD'\n  // 오늘 날짜\n  const today = moment();\n  // talk.regDate를 moment 객체로 변환\n  const regDate = moment(talk.regDate);\n  // 연월일이 같은 경우 시간 hh:mm으로 출력\n  const isToday = today.isSame(regDate, 'day');\n  // 연월일이 다른 경우 yyyy-mm-dd 형태로 출력\n  const formattedDate = regDate.format(isToday ? 'HH:mm' : 'YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: talk.talkNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: talk['leagueDto'] ? talk['leagueDto']['leagueName'] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/footballtalk/read/${talk.talkNum}`,\n        children: talk.talkTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: talk['membersDto'] ? talk['membersDto']['memberProfile'] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: talk.talkViews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = TalkTableRow;\nexport default TalkTableRow;\nvar _c;\n$RefreshReg$(_c, \"TalkTableRow\");","map":{"version":3,"names":["Link","moment","jsxDEV","_jsxDEV","TalkTableRow","props","talk","today","regDate","isToday","isSame","formattedDate","format","children","talkNum","fileName","_jsxFileName","lineNumber","columnNumber","to","talkTitle","talkViews","_c","$RefreshReg$"],"sources":["C:/k_digital/SportsLight/Front/sportslight/src/components/community/footballtalk/talkTableRow.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst TalkTableRow = (props) => {\n  const { talk } = props;\n\n  // 오늘의 게시물 날짜 포맷은 'HH:mm', 이전의 게시물 날짜 포맷은 'YYYY-MM-DD'\n  // 오늘 날짜\n  const today = moment();\n  // talk.regDate를 moment 객체로 변환\n  const regDate = moment(talk.regDate);\n  // 연월일이 같은 경우 시간 hh:mm으로 출력\n  const isToday = today.isSame(regDate, 'day');\n  // 연월일이 다른 경우 yyyy-mm-dd 형태로 출력\n  const formattedDate = regDate.format(isToday ? 'HH:mm' : 'YYYY-MM-DD');\n\n  return (\n    <tr>\n      <td>{talk.talkNum}</td>\n      <td>{talk['leagueDto'] ? talk['leagueDto']['leagueName'] : null}</td>\n      <td>\n        <Link to={`/footballtalk/read/${talk.talkNum}`}>{talk.talkTitle}</Link>\n      </td>\n      <td>{talk['membersDto'] ? talk['membersDto']['memberProfile'] : null}</td>\n      <td>{formattedDate}</td>\n      <td>{talk.talkViews}</td>\n    </tr>\n  );\n};\n\nexport default TalkTableRow;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;;EAEtB;EACA;EACA,MAAME,KAAK,GAAGN,MAAM,CAAC,CAAC;EACtB;EACA,MAAMO,OAAO,GAAGP,MAAM,CAACK,IAAI,CAACE,OAAO,CAAC;EACpC;EACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAACF,OAAO,EAAE,KAAK,CAAC;EAC5C;EACA,MAAMG,aAAa,GAAGH,OAAO,CAACI,MAAM,CAACH,OAAO,GAAG,OAAO,GAAG,YAAY,CAAC;EAEtE,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAKP,IAAI,CAACQ;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBf,OAAA;MAAAU,QAAA,EAAKP,IAAI,CAAC,WAAW,CAAC,GAAGA,IAAI,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,GAAG;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrEf,OAAA;MAAAU,QAAA,eACEV,OAAA,CAACH,IAAI;QAACmB,EAAE,EAAG,sBAAqBb,IAAI,CAACQ,OAAQ,EAAE;QAAAD,QAAA,EAAEP,IAAI,CAACc;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACLf,OAAA;MAAAU,QAAA,EAAKP,IAAI,CAAC,YAAY,CAAC,GAAGA,IAAI,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,GAAG;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1Ef,OAAA;MAAAU,QAAA,EAAKF;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBf,OAAA;MAAAU,QAAA,EAAKP,IAAI,CAACe;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAET,CAAC;AAACI,EAAA,GAzBIlB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}